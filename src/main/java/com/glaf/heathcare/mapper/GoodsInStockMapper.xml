<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.glaf.heathcare.mapper.GoodsInStockMapper">

	<resultMap id="goodsInStockResultMap"
		type="com.glaf.heathcare.domain.GoodsInStock">
		<id property="id" column="ID_" jdbcType="BIGINT" />
		<result property="tenantId" column="TENANTID_"
			jdbcType="VARCHAR" />
		<result property="goodsId" column="GOODSID_" jdbcType="BIGINT" />
		<result property="goodsName" column="GOODSNAME_"
			jdbcType="VARCHAR" />
		<result property="goodsNodeId" column="GOODSNODEID_"
			jdbcType="BIGINT" />
		<result property="inStockTime" column="INSTOCKTIME_"
			jdbcType="TIMESTAMP" />
		<result property="semester" column="SEMESTER_"
			jdbcType="INTEGER" />
		<result property="year" column="YEAR_" jdbcType="INTEGER" />
		<result property="month" column="MONTH_" jdbcType="INTEGER" />
		<result property="day" column="DAY_" jdbcType="INTEGER" />
		<result property="week" column="WEEK_" jdbcType="INTEGER" />
		<result property="fullDay" column="FULLDAY_" jdbcType="INTEGER" />
		<result property="batchNo" column="BATCHNO_" jdbcType="VARCHAR" />
		<result property="supplier" column="SUPPLIER_"
			jdbcType="VARCHAR" />
		<result property="contact" column="CONTACT_" jdbcType="VARCHAR" />
		<result property="standard" column="STANDARD_"
			jdbcType="VARCHAR" />
		<result property="address" column="ADDRESS_" jdbcType="VARCHAR" />
		<result property="quantity" column="QUANTITY_"
			jdbcType="DOUBLE" />
		<result property="unit" column="UNIT_" jdbcType="VARCHAR" />
		<result property="price" column="PRICE_" jdbcType="DOUBLE" />
		<result property="totalPrice" column="TOTALPRICE_"
			jdbcType="DOUBLE" />
		<result property="expiryDate" column="EXPIRYDATE_"
			jdbcType="TIMESTAMP" />
		<result property="available" column="AVAILABLE_"
			jdbcType="INTEGER" />
		<result property="receiverId" column="RECEIVERID_"
			jdbcType="VARCHAR" />
		<result property="receiverName" column="RECEIVERNAME_"
			jdbcType="VARCHAR" />
		<result property="remark" column="REMARK_" jdbcType="VARCHAR" />
		<result property="businessStatus" column="BUSINESSSTATUS_"
			jdbcType="INTEGER" />
		<result property="confirmTime" column="CONFIRMTIME_"
			jdbcType="TIMESTAMP" />
		<result property="confirmBy" column="CONFIRMBY_"
			jdbcType="VARCHAR" />
		<result property="createBy" column="CREATEBY_"
			jdbcType="VARCHAR" />
		<result property="createTime" column="CREATETIME_"
			jdbcType="TIMESTAMP" />
	</resultMap>


	<insert id="insertGoodsInStock"
		parameterType="com.glaf.heathcare.domain.GoodsInStock">
		insert into GOODS_IN_STOCK${tableSuffix}
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ID_
			<if test="tenantId != null">
				,TENANTID_
			</if>
			<if test="goodsId != null">
				,GOODSID_
			</if>
			<if test="goodsName != null">
				,GOODSNAME_
			</if>
			<if test="goodsNodeId != null">
				,GOODSNODEID_
			</if>
			<if test="inStockTime != null">
				,INSTOCKTIME_
			</if>
			<if test="semester != null">
				,SEMESTER_
			</if>
			<if test="year != null">
				,YEAR_
			</if>
			<if test="month != null">
				,MONTH_
			</if>
			<if test="day != null">
				,DAY_
			</if>
			<if test="week != null">
				,WEEK_
			</if>
			<if test="fullDay != null">
				,FULLDAY_
			</if>
			<if test="batchNo != null">
				,BATCHNO_
			</if>
			<if test="supplier != null">
				,SUPPLIER_
			</if>
			<if test="contact != null">
				,CONTACT_
			</if>
			<if test="standard != null">
				,STANDARD_
			</if>
			<if test="address != null">
				,ADDRESS_
			</if>
			<if test="quantity != null">
				,QUANTITY_
			</if>
			<if test="unit != null">
				,UNIT_
			</if>
			<if test="price != null">
				,PRICE_
			</if>
			<if test="totalPrice != null">
				,TOTALPRICE_
			</if>
			<if test="expiryDate != null">
				,EXPIRYDATE_
			</if>
			<if test="available != null">
				,AVAILABLE_
			</if>
			<if test="receiverId != null">
				,RECEIVERID_
			</if>
			<if test="receiverName != null">
				,RECEIVERNAME_
			</if>
			<if test="remark != null">
				,REMARK_
			</if>
			<if test="businessStatus != null">
				,BUSINESSSTATUS_
			</if>
			<if test="confirmBy != null">
				,CONFIRMBY_
			</if>
			<if test="confirmTime != null">
				,CONFIRMTIME_
			</if>
			<if test="createBy != null">
				,CREATEBY_
			</if>
			<if test="createTime != null">
				,CREATETIME_
			</if>
		</trim>

		<trim prefix=" values (" suffix=")" suffixOverrides=",">
			#{id, jdbcType=BIGINT}

			<if test="tenantId != null">
				,#{tenantId, jdbcType=VARCHAR}
			</if>
			<if test="goodsId != null">
				,#{goodsId, jdbcType=BIGINT}
			</if>
			<if test="goodsName != null">
				,#{goodsName, jdbcType=VARCHAR}
			</if>
			<if test="goodsNodeId != null">
				,#{goodsNodeId, jdbcType=BIGINT}
			</if>
			<if test="inStockTime != null">
				,#{inStockTime, jdbcType=TIMESTAMP}
			</if>
			<if test="semester != null">
				,#{semester, jdbcType=INTEGER}
			</if>
			<if test="year != null">
				,#{year, jdbcType=INTEGER}
			</if>
			<if test="month != null">
				,#{month, jdbcType=INTEGER}
			</if>
			<if test="day != null">
				,#{day, jdbcType=INTEGER}
			</if>
			<if test="week != null">
				,#{week, jdbcType=INTEGER}
			</if>
			<if test="fullDay != null">
				,#{fullDay, jdbcType=INTEGER}
			</if>
			<if test="batchNo != null">
				,#{batchNo, jdbcType=VARCHAR}
			</if>
			<if test="supplier != null">
				,#{supplier, jdbcType=VARCHAR}
			</if>
			<if test="contact != null">
				,#{contact, jdbcType=VARCHAR}
			</if>
			<if test="standard != null">
				,#{standard, jdbcType=VARCHAR}
			</if>
			<if test="address != null">
				,#{address, jdbcType=VARCHAR}
			</if>
			<if test="quantity != null">
				,#{quantity, jdbcType=DOUBLE}
			</if>
			<if test="unit != null">
				,#{unit, jdbcType=VARCHAR}
			</if>
			<if test="price != null">
				,#{price, jdbcType=DOUBLE}
			</if>
			<if test="totalPrice != null">
				,#{totalPrice, jdbcType=DOUBLE}
			</if>
			<if test="expiryDate != null">
				,#{expiryDate, jdbcType=TIMESTAMP}
			</if>
			<if test="available != null">
				,#{available, jdbcType=INTEGER}
			</if>
			<if test="receiverId != null">
				,#{receiverId, jdbcType=VARCHAR}
			</if>
			<if test="receiverName != null">
				,#{receiverName, jdbcType=VARCHAR}
			</if>
			<if test="remark != null">
				,#{remark, jdbcType=VARCHAR}
			</if>
			<if test="businessStatus != null">
				,#{businessStatus, jdbcType=INTEGER}
			</if>
			<if test="confirmBy != null">
				,#{confirmBy, jdbcType=VARCHAR}
			</if>
			<if test="confirmTime != null">
				,#{confirmTime, jdbcType=TIMESTAMP}
			</if>
			<if test="createBy != null">
				,#{createBy, jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				,#{createTime, jdbcType=TIMESTAMP}
			</if>
		</trim>
	</insert>


	<insert id="bulkInsertGoodsInStock"
		parameterType="com.glaf.core.base.ListModel">
		insert into GOODS_IN_STOCK${tableSuffix} (
		ID_
		,TENANTID_
		,GOODSID_
		,GOODSNAME_
		,GOODSNODEID_
		,INSTOCKTIME_
		,SEMESTER_
		,YEAR_
		,MONTH_
		,DAY_
		,WEEK_
		,FULLDAY_
		,BATCHNO_
		,SUPPLIER_
		,CONTACT_
		,STANDARD_
		,ADDRESS_
		,QUANTITY_
		,UNIT_
		,PRICE_
		,TOTALPRICE_
		,EXPIRYDATE_
		,AVAILABLE_
		,RECEIVERID_
		,RECEIVERNAME_
		,REMARK_
		,BUSINESSSTATUS_
		,CREATEBY_
		,CREATETIME_
		) values
		<foreach collection="list" item="goodsInStock" index="index"
			separator=",">
			(
			#{goodsInStock.id, jdbcType=BIGINT}
			,#{goodsInStock.tenantId, jdbcType=VARCHAR}
			,#{goodsInStock.goodsId,
			jdbcType=BIGINT}
			,#{goodsInStock.goodsName, jdbcType=VARCHAR}
			,#{goodsInStock.goodsNodeId, jdbcType=BIGINT}
			,#{goodsInStock.inStockTime, jdbcType=TIMESTAMP}
			,#{goodsInStock.semester, jdbcType=INTEGER}
			,#{goodsInStock.year,
			jdbcType=INTEGER}
			,#{goodsInStock.month,
			jdbcType=INTEGER}
			,#{goodsInStock.day, jdbcType=INTEGER}
			,#{goodsInStock.week,
			jdbcType=INTEGER}
			,#{goodsInStock.fullDay,
			jdbcType=INTEGER}
			,#{goodsInStock.batchNo, jdbcType=VARCHAR}
			,#{goodsInStock.supplier,
			jdbcType=VARCHAR}
			,#{goodsInStock.contact, jdbcType=VARCHAR}
			,#{goodsInStock.standard, jdbcType=VARCHAR}
			,#{goodsInStock.address,
			jdbcType=VARCHAR}
			,#{goodsInStock.quantity,
			jdbcType=DOUBLE}
			,#{goodsInStock.unit,
			jdbcType=VARCHAR}
			,#{goodsInStock.price,
			jdbcType=DOUBLE}
			,#{goodsInStock.totalPrice,
			jdbcType=DOUBLE}
			,#{goodsInStock.expiryDate, jdbcType=TIMESTAMP}
			,#{goodsInStock.available, jdbcType=INTEGER}
			,#{goodsInStock.receiverId, jdbcType=VARCHAR}
			,#{goodsInStock.receiverName, jdbcType=VARCHAR}
			,#{goodsInStock.remark, jdbcType=VARCHAR}
			,#{goodsInStock.businessStatus, jdbcType=INTEGER}
			,#{goodsInStock.createBy,
			jdbcType=VARCHAR}
			,#{goodsInStock.createTime, jdbcType=TIMESTAMP}
			)
		</foreach>
	</insert>


	<insert id="bulkInsertGoodsInStock_oracle"
		parameterType="java.util.List">
		INSERT ALL
		<foreach collection="list" item="goodsInStock" index="index">
			insert
			into GOODS_IN_STOCK${tableSuffix} (
			ID_
			,TENANTID_
			,GOODSID_
			,GOODSNAME_
			,GOODSNODEID_
			,INSTOCKTIME_
			,SEMESTER_
			,YEAR_
			,MONTH_
			,DAY_
			,WEEK_
			,FULLDAY_
			,BATCHNO_
			,SUPPLIER_
			,CONTACT_
			,STANDARD_
			,ADDRESS_
			,QUANTITY_
			,UNIT_
			,PRICE_
			,TOTALPRICE_
			,EXPIRYDATE_
			,AVAILABLE_
			,RECEIVERID_
			,RECEIVERNAME_
			,REMARK_
			,BUSINESSSTATUS_
			,CREATEBY_
			,CREATETIME_
			) values
			(
			#{goodsInStock.id, jdbcType=BIGINT}
			,#{goodsInStock.tenantId,
			jdbcType=VARCHAR}
			,#{goodsInStock.goodsId,
			jdbcType=BIGINT}
			,#{goodsInStock.goodsName, jdbcType=VARCHAR}
			,#{goodsInStock.goodsNodeId, jdbcType=BIGINT}
			,#{goodsInStock.inStockTime, jdbcType=TIMESTAMP}
			,#{goodsInStock.semester, jdbcType=INTEGER}
			,#{goodsInStock.year,
			jdbcType=INTEGER}
			,#{goodsInStock.month,
			jdbcType=INTEGER}
			,#{goodsInStock.day, jdbcType=INTEGER}
			,#{goodsInStock.week,
			jdbcType=INTEGER}
			,#{goodsInStock.fullDay,
			jdbcType=INTEGER}
			,#{goodsInStock.batchNo, jdbcType=VARCHAR}
			,#{goodsInStock.supplier,
			jdbcType=VARCHAR}
			,#{goodsInStock.contact, jdbcType=VARCHAR}
			,#{goodsInStock.standard, jdbcType=VARCHAR}
			,#{goodsInStock.address,
			jdbcType=VARCHAR}
			,#{goodsInStock.quantity,
			jdbcType=DOUBLE}
			,#{goodsInStock.unit,
			jdbcType=VARCHAR}
			,#{goodsInStock.price,
			jdbcType=DOUBLE}
			,#{goodsInStock.totalPrice,
			jdbcType=DOUBLE}
			,#{goodsInStock.expiryDate, jdbcType=TIMESTAMP}
			,#{goodsInStock.available, jdbcType=INTEGER}
			,#{goodsInStock.receiverId, jdbcType=VARCHAR}
			,#{goodsInStock.receiverName, jdbcType=VARCHAR}
			,#{goodsInStock.remark, jdbcType=VARCHAR}
			,#{goodsInStock.businessStatus, jdbcType=INTEGER}
			,#{goodsInStock.createBy,
			jdbcType=VARCHAR}
			,#{goodsInStock.createTime, jdbcType=TIMESTAMP}
			)
		</foreach>
		SELECT * FROM dual
	</insert>


	<update id="updateGoodsInStock"
		parameterType="com.glaf.heathcare.domain.GoodsInStock">
		update GOODS_IN_STOCK${tableSuffix}
		set
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="quantity != null">
				QUANTITY_ = #{quantity, jdbcType=DOUBLE},
			</if>
			<if test="unit != null">
				UNIT_ = #{unit, jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				PRICE_ = #{price, jdbcType=DOUBLE},
			</if>
			<if test="totalPrice != null">
				TOTALPRICE_ = #{totalPrice, jdbcType=DOUBLE},
			</if>
			<if test="batchNo != null">
				BATCHNO_ = #{batchNo, jdbcType=VARCHAR},
			</if>
			<if test="supplier != null">
				SUPPLIER_ = #{supplier, jdbcType=VARCHAR},
			</if>
			<if test="contact != null">
				CONTACT_ = #{contact, jdbcType=VARCHAR},
			</if>
			<if test="standard != null">
				STANDARD_ = #{standard, jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				ADDRESS_ = #{address, jdbcType=VARCHAR},
			</if>
			<if test="expiryDate != null">
				EXPIRYDATE_ = #{expiryDate, jdbcType=TIMESTAMP},
			</if>
			<if test="receiverId != null">
				RECEIVERID_ = #{receiverId, jdbcType=VARCHAR},
			</if>
			<if test="receiverName != null">
				RECEIVERNAME_ = #{receiverName, jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				REMARK_ = #{remark, jdbcType=VARCHAR},
			</if>
		</trim>
		where
		ID_ = #{id, jdbcType=BIGINT}

	</update>
	
	
	<update id="updateGoodsInStockQuantity"
		parameterType="com.glaf.heathcare.domain.GoodsInStock">

		update GOODS_IN_STOCK${tableSuffix}
		set
		QUANTITY_ = #{quantity, jdbcType=DOUBLE},
		PRICE_ = #{price, jdbcType=DOUBLE},
		TOTALPRICE_ = #{totalPrice, jdbcType=DOUBLE}
		where
		ID_ = #{id, jdbcType=BIGINT}

	</update>


	<update id="updateGoodsInStockStatus"
		parameterType="com.glaf.heathcare.domain.GoodsInStock">

		update GOODS_IN_STOCK${tableSuffix}
		set AVAILABLE_ = #{available,
		jdbcType=INTEGER},
		BUSINESSSTATUS_ = #{businessStatus, jdbcType=INTEGER},
		CONFIRMBY_ = #{confirmBy, jdbcType=VARCHAR},
		CONFIRMTIME_ = #{confirmTime, jdbcType=TIMESTAMP}
		where ID_ = #{id,
		jdbcType=BIGINT}

	</update>


	<update id="updateGoodsInStockAvailable"
		parameterType="com.glaf.heathcare.domain.GoodsInStock">
		update
		GOODS_IN_STOCK${tableSuffix}
		set
		AVAILABLE_ =
		#{available,
		jdbcType=INTEGER}
		where TENANTID_ = #{tenantId,
		jdbcType=VARCHAR}
		and
		GOODSID_ = #{goodsId, jdbcType=BIGINT}
		and
		BUSINESSSTATUS_ =
		#{businessStatus, jdbcType=INTEGER}
	</update>


	<delete id="deleteGoodsInStockById"
		parameterType="com.glaf.heathcare.query.GoodsInStockQuery">
		delete from
		GOODS_IN_STOCK${tableSuffix}
		where ID_ = #{id}
	</delete>


	<select id="getGoodsInStockById"
		parameterType="com.glaf.heathcare.query.GoodsInStockQuery"
		resultMap="goodsInStockResultMap">
		select * from GOODS_IN_STOCK${tableSuffix} where ID_ = #{id}
	</select>


	<select id="getGoodsInStocks"
		parameterType="com.glaf.heathcare.query.GoodsInStockQuery"
		resultMap="goodsInStockResultMap">
		select distinct E.*
		<include refid="selectGoodsInStocksSql" />
		<choose>
			<when test="orderBy != null">
				order by ${orderBy}
			</when>
			<otherwise>
				order by E.BUSINESSSTATUS_ asc, E.INSTOCKTIME_ desc
			</otherwise>
		</choose>
	</select>


	<select id="getGoodsInStockCount"
		parameterType="com.glaf.heathcare.query.GoodsInStockQuery"
		resultType="int">
		select count(*)
		<include refid="selectGoodsInStocksSql" />
	</select>


	<sql id="selectGoodsInStocksSql">

		from GOODS_IN_STOCK${tableSuffix} E

		<where>
			1 = 1

			<if test="ids != null and ids.size() &gt; 0">
				and E.ID_ IN
				<foreach item="x_id" index="index" collection="ids" open="("
					separator="," close=")">
					#{x_id}
				</foreach>
			</if>

			<if test="tenantId != null and tenantId != '' ">
				and E.TENANTID_ = #{tenantId}
			</if>

			<if test="tenantIds != null and tenantIds.size() &gt; 0">
				and E.TENANTID_ IN
				<foreach item="x_tenantId" index="index"
					collection="tenantIds" open="(" separator="," close=")">
					#{x_tenantId}
				</foreach>
			</if>

			<if test="goodsId != null">
				and E.GOODSID_ = #{goodsId}
			</if>

			<if test="goodsIds != null and goodsIds.size() &gt; 0">
				and E.GOODSID_ IN
				<foreach item="x_goodsId" index="index"
					collection="goodsIds" open="(" separator="," close=")">
					#{x_goodsId}
				</foreach>
			</if>

			<if test="goodsNameLike != null and goodsNameLike != '' ">
				and E.GOODSNAME_ like #{goodsNameLike}
			</if>

			<if test="goodsNodeId != null">
				and E.GOODSNODEID_ = #{goodsNodeId}
			</if>

			<if test="inStockTimeGreaterThanOrEqual != null">
				and E.INSTOCKTIME_ &gt;= #{inStockTimeGreaterThanOrEqual}
			</if>

			<if test="inStockTimeLessThanOrEqual != null">
				and E.INSTOCKTIME_ &lt;= #{inStockTimeLessThanOrEqual}
			</if>

			<if test="semester != null">
				and E.SEMESTER_ = #{semester}
			</if>

			<if test="year != null">
				and E.YEAR_ = #{year}
			</if>

			<if test="yearGreaterThanOrEqual != null">
				and E.YEAR_ &gt;= #{yearGreaterThanOrEqual}
			</if>

			<if test="month != null">
				and E.MONTH_ = #{month}
			</if>

			<if test="week != null and week &gt; 0 ">
				and E.WEEK_ = #{week}
			</if>

			<if test="day != null">
				and E.DAY_ = #{day}
			</if>

			<if test="fullDay != null">
				and E.FULLDAY_ = #{fullDay}
			</if>

			<if test="fullDayGreaterThanOrEqual != null">
				and E.FULLDAY_ &gt;= #{fullDayGreaterThanOrEqual}
			</if>

			<if test="fullDayLessThanOrEqual != null">
				and E.FULLDAY_ &lt;= #{fullDayLessThanOrEqual}
			</if>

			<if test="addressLike != null and addressLike != '' ">
				and E.ADDRESS_ like #{addressLike}
			</if>

			<if test="quantityGreaterThanOrEqual != null">
				and E.QUANTITY_ &gt;= #{quantityGreaterThanOrEqual}
			</if>

			<if test="quantityLessThanOrEqual != null">
				and E.QUANTITY_ &lt;= #{quantityLessThanOrEqual}
			</if>

			<if test="unit != null and unit != '' ">
				and E.UNIT_ = #{unit}
			</if>

			<if test="priceGreaterThanOrEqual != null">
				and E.PRICE_ &gt;= #{priceGreaterThanOrEqual}
			</if>

			<if test="priceLessThanOrEqual != null">
				and E.PRICE_ &lt;= #{priceLessThanOrEqual}
			</if>

			<if test="totalPriceGreaterThanOrEqual != null">
				and E.TOTALPRICE_ &gt;= #{totalPriceGreaterThanOrEqual}
			</if>

			<if test="totalPriceLessThanOrEqual != null">
				and E.TOTALPRICE_ &lt;= #{totalPriceLessThanOrEqual}
			</if>

			<if test="expiryDateGreaterThanOrEqual != null">
				and E.EXPIRYDATE_ &gt;= #{expiryDateGreaterThanOrEqual}
			</if>

			<if test="expiryDateLessThanOrEqual != null">
				and E.EXPIRYDATE_ &lt;= #{expiryDateLessThanOrEqual}
			</if>

			<if test="receiverId != null and receiverId != '' ">
				and E.RECEIVERID_ = #{receiverId}
			</if>

			<if test="receiverIds != null and receiverIds.size() &gt; 0">
				and E.RECEIVERID_ IN
				<foreach item="x_receiverId" index="index"
					collection="receiverIds" open="(" separator="," close=")">
					#{x_receiverId}
				</foreach>
			</if>

			<if test="receiverNameLike != null and receiverNameLike != '' ">
				and E.RECEIVERNAME_ like #{receiverNameLike}
			</if>

			<if test="remarkLike != null and remarkLike != '' ">
				and E.REMARK_ like #{remarkLike}
			</if>

			<if test="businessStatus != null">
				and E.BUSINESSSTATUS_ = #{businessStatus}
			</if>

			<if test="confirmBy != null and confirmBy != '' ">
				and E.CONFIRMBY_ = #{confirmBy}
			</if>

			<if test="confirmTimeGreaterThanOrEqual != null">
				and E.CONFIRMTIME_ &gt;= #{confirmTimeGreaterThanOrEqual}
			</if>

			<if test="confirmTimeLessThanOrEqual != null">
				and E.CONFIRMTIME_ &lt;= #{confirmTimeLessThanOrEqual}
			</if>

			<if test="createBy != null and createBy != '' ">
				and E.CREATEBY_ = #{createBy}
			</if>

			<if test="createTimeGreaterThanOrEqual != null">
				and E.CREATETIME_ &gt;= #{createTimeGreaterThanOrEqual}
			</if>

			<if test="createTimeLessThanOrEqual != null">
				and E.CREATETIME_ &lt;= #{createTimeLessThanOrEqual}
			</if>

		</where>
	</sql>

</mapper>